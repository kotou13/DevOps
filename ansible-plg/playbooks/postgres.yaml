---
- hosts: azurehosts
  become: yes
  vars:
    db:
      name: "comeback"
      user: "comeback"
      password: "vhBjjaKYkzHwxl1VqKrzR7WIhl4vy8hq"
  become_user: root


  pre_tasks:
    - name: Install the PostgreSQL package
      apt:
        name: ["postgresql-contrib", "postgresql-client"]
        state: present
        update_cache: yes

    - name: install pip3
      apt:
        name: ["python3-pip"]
        state: present
        update_cache: yes

    - name: Install psycopg2 via APT
      apt:
        name: python3-psycopg2
        state: present
        update_cache: yes


  tasks:
    - name: check if postgres is initialized
      ansible.builtin.stat:
        path: /var/lib/postgresql/14/main
      register: postgres_data

    - name: debug stat
      ansible.builtin.debug:
        msg: "postgres data debug {{postgres_data}}"

    #- name: "Initialize PostgreSQL"
     # shell: "postgresql-setup initdb"
     # when: not postgres_data.stat.exists

    - name: "Start and enable services"
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - postgresql

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db.name }}"
      become: yes
      become_user: postgres


    - name: "Create db user"
      postgresql_user:
          state: present
          name: "{{ db.user }}"
          password: "{{ db.password }}"
      become: yes
      become_user: postgres
      tags:
       - dbuser

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db.name }}"
        roles: "{{ db.user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "/etc/postgresql/16/main/pg_hba.conf"
        contype: host
        databases: all
        source: 0.0.0.0/0
        method: md5
        users: "{{ db.user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: "Allow connections from all"
      lineinfile:
        path: "/etc/postgresql/16/main/postgresql.conf"
        line: "listen_addresses = '*'"
        regexp: "^#listen_addresses = 'localhost'"
        state: present
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: Insert admin user into users table
      become: yes
      become_user: postgres
      postgresql_query:
        db: "{{ db.name }}"
        query: >
          INSERT INTO users (id, username, email, password)
          VALUES (2, 'admin', 'admin@example.com', 'admin')
          ON CONFLICT (id) DO NOTHING;
      tags:
       - admin

    - name: Link admin user to role_id 2 in user_roles
      become: yes
      become_user: postgres
      postgresql_query:
        db: "{{ db.name }}"
        query: >
          INSERT INTO user_roles (user_id, role_id)
          VALUES (2, 2)
          ON CONFLICT DO NOTHING;
      tags:
       - admin


  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

